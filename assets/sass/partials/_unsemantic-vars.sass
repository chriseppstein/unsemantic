// These mixins are intended to be used from:
//
//   * _unsemantic-grid-base.sass
//   * _unsemantic-grid-mobile.sass
//   * _unsemantic-grid-desktop.sass
//
// But could be used in your own styles, via class
// names of your choice. You don't *have* to be
// unsemantic. That's entirely up to you! :)

// If you don't need IE7 support, set a flag in the top-level scope.
//
//   $unsemantic-ie7-support: false
//
// If you do not declare that variable, the default setting is true.

// `Variables
//----------------------------------------------------------------------------------------------------

$unsemantic-ie7-support: true !default

$container-max-width: 1200px !default

$gutter-half: 10px !default

$lang-forward: left !default

$lang-reverse: right !default

$current-media: null !default

$placeholder-definitions: ()

=def-media-placeholder($name, $media: $current-media)
  $full-name: "#{$name}#{if($media, '-', null)}#{$media}"
  @if not map-get($placeholder-definitions, $full-name)
    $placeholder-definitions: map-merge($placeholder-definitions, ($full-name: true))
    %#{$full-name}
      @content

=extend-media-placeholder($name, $media: $current-media)
  $full-name: "#{$name}#{if($media, '-', null)}#{$media}"
  @extend %#{$full-name}

=define-media($name, $scope)
  $old-media: $current-media
  $current-media: $name !global
  @media screen and #{$scope}
    @content
  $current-media: $old-media !global


=unsemantic-grid-system
  // `Clear floated elements.
  //----------------------------------------------------------------------------------------------------

  // http://sonspring.com/journal/clearing-floats

  +def-media-placeholder(clear)
    clear: both
    display: block
    overflow: hidden
    visibility: hidden
    width: 0
    height: 0

  // http://www.yuiblog.com/blog/2010/09/27/clearfix-reloaded-overflowhidden-demystified

  +def-media-placeholder(clearfix)
    &:before,
    &:after
      content: "."
      display: block
      overflow: hidden
      visibility: hidden
      font-size: 0
      line-height: 0
      width: 0
      height: 0

    &:after
      clear: both

  @if $unsemantic-ie7-support
    +def-media-placeholder(clearfix)
      /* <IE7> */
      *zoom: 1
      /* </IE7> */

  // `Container
  //----------------------------------------------------------------------------------------------------

  +def-media-placeholder(grid-container)
    +extend-media-placeholder(clearfix)
    margin-left: auto
    margin-right: auto

    @if $container-max-width != none
      max-width: $container-max-width

    // Set if gutter is non-zero
    @if $gutter-half != 0
      padding-left: $gutter-half
      padding-right: $gutter-half

  // `Grid columns.
  //----------------------------------------------------------------------------------------------------

  %grid-columns-all
    +box-sizing(border-box)

    // Set if gutter is non-zero
    @if $gutter-half != 0
      padding-left: $gutter-half
      padding-right: $gutter-half

      @if $unsemantic-ie7-support
        // [1] Remove padding, since IE7 doesn't
        //     support "box-sizing: border-box".

        /* <IE7> */
        *padding-left: 0
        *padding-right: 0
        /* </IE7> */

        //
        // [2] Fake what would normally be padding,
        //     for browsers that support box-sizing.
        & > *
          /* <IE7> */
          *margin-left: expression((!this.className.match(/grid-[1-9]/) && this.currentStyle.display === "block" && this.currentStyle.width === "auto") && "#{$gutter-half}")
          *margin-right: expression((!this.className.match(/grid-[1-9]/) && this.currentStyle.display === "block" && this.currentStyle.width === "auto") && "#{$gutter-half}")
          /* </IE7> */

  // `Push & Pull, to rearrange column order (for potential "SEO").
  //----------------------------------------------------------------------------------------------------

  // Remove padding, if it's being used
  // as a parent for other grid columns.
  +def-media-placeholder(grid-parent)
    padding-left: 0
    padding-right: 0

  // Allows columns to be offset +/- left.
  +def-media-placeholder(grid-columns-push-pull)
    position: relative

  // `Hide on desktop/tablet/mobile.
  //----------------------------------------------------------------------------------------------------

  +def-media-placeholder(hide)
    display: none !important

  // `Grid columns.
  //----------------------------------------------------------------------------------------------------

  //
  // For 5 through 95 percent.
  //

  @for $i from 1 through 19
    $num: $i * 5
    $decimal: $num / 100
    $percent: $num * 1%

    +def-media-placeholder("grid-#{$num}")
      float: $lang-forward
      width: $percent

      @if $unsemantic-ie7-support
        /* <IE7> */
        *width: expression(Math.floor(#{$decimal} * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px")
        /* </IE7> */

    +def-media-placeholder("prefix-#{$num}")
      margin-#{$lang-forward}: $percent

    +def-media-placeholder("suffix-#{$num}")
      margin-#{$lang-reverse}: $percent

    +def-media-placeholder("push-#{$num}")
      #{$lang-forward}: $percent

      @if $unsemantic-ie7-support
        /* <IE7> */
        *#{$lang-forward}: expression(Math.floor(#{$decimal} * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px")
        /* </IE7> */

    +def-media-placeholder("pull-#{$num}")
      #{$lang-forward}: $percent * -1

      @if $unsemantic-ie7-support
        /* <IE7> */
        *#{$lang-forward}: expression(Math.floor(#{$decimal * -1} * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px")
        /* </IE7> */

  //
  // For one-third and two-thirds.
  //

  @for $i from 1 through 2
    $num: $i * 33
    $one-third: 1/3
    $decimal: $i * $one-third
    $percent: ($num + $decimal) * 1%

    // Percentage based widths.
    +def-media-placeholder("grid-#{$num}")
      float: $lang-forward
      width: $percent

      @if $unsemantic-ie7-support
        /* <IE7> */
        *width: expression(Math.floor(#{$decimal} * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px")
        /* </IE7> */

    // Prefix, to add extra columns before.
    +def-media-placeholder("prefix-#{$num}")
      margin-#{$lang-forward}: $percent

    // Suffix, to add extra columns after.
    +def-media-placeholder("suffix-#{$num}")
      margin-#{$lang-reverse}: $percent

    // Push & Pull, to rearrange column order (for potential "SEO").
    +def-media-placeholder("push-#{$num}")
      #{$lang-forward}: $percent

      @if $unsemantic-ie7-support
        /* <IE7> */
        *#{$lang-forward}: expression(Math.floor(#{$decimal} * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px")
        /* </IE7> */

    +def-media-placeholder("pull-#{$num}")
      #{$lang-forward}: $percent * -1

      @if $unsemantic-ie7-support
        /* <IE7> */
        *#{$lang-forward}: expression(Math.floor(#{$decimal * -1} * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px")
        /* </IE7> */

  //
  // Full width, just line-break.
  //

  +def-media-placeholder(grid-100)
    +extend-media-placeholder(clearfix)
    clear: both
    width: 100%
